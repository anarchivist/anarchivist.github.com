<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WorldCat on Mark A. Matienzo</title>
    <link>https://matienzo.org/tags/worldcat/</link>
    <description>Recent content in WorldCat on Mark A. Matienzo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 18 Jan 2009 22:55:32 +0000</lastBuildDate>
    
	<atom:link href="https://matienzo.org/tags/worldcat/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>API Fun: Visualizing Holdings Locations</title>
      <link>https://matienzo.org/2009/api-fun-visualizing-holdings-locations/</link>
      <pubDate>Sun, 18 Jan 2009 22:55:32 +0000</pubDate>
      
      <guid>https://matienzo.org/2009/api-fun-visualizing-holdings-locations/</guid>
      <description>In my previous post, I included a screenshot of a prototype, but glossed over what it actually does. Given an OCLC record number and a ZIP code, it plots the locations of the nearest holdings of that item on a Google Map. Pulled off in Python (as all good mashups should be), along with SIMILE Exhibit, it uses the following modules:
 geopy simplejson web.py and, of course, worldcat.  If you want to try it out, head on over here.</description>
    </item>
    
    <item>
      <title>This Is All I&#39;m Going To Say On This Here Blogsite Concerning The Brouhaha About The Policy for Use and Transfer of WorldCat Records Because I Have Other, More Interesting And More Complex Problems To Solve (And So Do You)</title>
      <link>https://matienzo.org/2009/this-is-all-im-going-to-say-on-this-here-blogsite-concerning-the-brouhaha-about-the-policy-for-use-and-transfer-of-worldcat-records-because-i-have-other-more-interesting-and-more-complex-problems-to-solve-and-so-do-you/</link>
      <pubDate>Sat, 17 Jan 2009 03:45:04 +0000</pubDate>
      
      <guid>https://matienzo.org/2009/this-is-all-im-going-to-say-on-this-here-blogsite-concerning-the-brouhaha-about-the-policy-for-use-and-transfer-of-worldcat-records-because-i-have-other-more-interesting-and-more-complex-problems-to-solve-and-so-do-you/</guid>
      <description>The moderated discussion hosted and sponsored by Nylink went pretty well. Also, I don&#39;t need the records to have fun with the data &#34;‚Äù I just need robust APIs. (In fact, as I said today, I&#39;d prefer not to have to deal with the MARC records directly.) Robust APIs would help making prototypes like this one I hacked together in a few hours into a real, usable service.</description>
    </item>
    
    <item>
      <title>Python WorldCat Module v0.1.2 Now Available</title>
      <link>https://matienzo.org/2008/python-worldcat-module-v0.1.2-now-available/</link>
      <pubDate>Thu, 06 Nov 2008 02:27:23 +0000</pubDate>
      
      <guid>https://matienzo.org/2008/python-worldcat-module-v0.1.2-now-available/</guid>
      <description>In preparation for the upcoming WorldCat Hackathon starting this Friday, I&#39;ve made a few changes to worldcat, my Python module for interacting with OCLC&#39;s APIs. Most notably, I&#39;ve added iterators for SRU and OpenSearch requests, which (like the rest of the module) painfully need documentation. It&#39;s available either via download from my site or via PyPI; please submit bug reports to the issue tracker as they arise.
EDIT: I&#39;ve bumped up the version number another micro number to 0.</description>
    </item>
    
    <item>
      <title>Python WorldCat API module now available</title>
      <link>https://matienzo.org/2008/python-worldcat-api-module-now-available/</link>
      <pubDate>Tue, 19 Aug 2008 22:42:00 +0000</pubDate>
      
      <guid>https://matienzo.org/2008/python-worldcat-api-module-now-available/</guid>
      <description>I&#39;d like to humbly announce that I&#39;ve written a pre-pre-alpha Python module for working with the WorldCat Search API and the xID APIs. The code needs a fair amount of work, namely unit tests and documentation. I&#39;ve released the code under the GPL.
The module, called &#34;worldcat&#34;, is available from the Python Package Index. You can also checkout a copy of the code from my Subversion repository.</description>
    </item>
    
  </channel>
</rss>